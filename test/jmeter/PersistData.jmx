<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="PersistData" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PersistOperator" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;entityId&quot;: {&#xd;
		&quot;type&quot;: &quot;Operator&quot;,&#xd;
		&quot;id&quot;: &quot;test10&quot;&#xd;
	},&#xd;
	&quot;attributes&quot;: [{&#xd;
		&quot;name&quot;: &quot;designboard&quot;,&#xd;
		&quot;type&quot;: &quot;object&quot;,&#xd;
		&quot;value&quot;: {}&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;operator&quot;,&#xd;
		&quot;type&quot;: &quot;object&quot;,&#xd;
		&quot;value&quot;: {&#xd;
			&quot;description&quot;: &quot;&quot;,&#xd;
			&quot;name&quot;: &quot;recommender&quot;,&#xd;
			&quot;parameters&quot;: []&#xd;
		}&#xd;
	}],&#xd;
	&quot;domainMetadata&quot;: [{&#xd;
		&quot;name&quot;: &quot;location&quot;,&#xd;
		&quot;type&quot;: &quot;global&quot;,&#xd;
		&quot;value&quot;: &quot;global&quot;&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">180.179.214.208</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ngsi10/updateContext</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="topology" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;entityId&quot;: {&#xd;
		&quot;type&quot;: &quot;Topology&quot;,&#xd;
		&quot;id&quot;: &quot;test11&quot;&#xd;
	},&#xd;
	&quot;attributes&quot;: [{&#xd;
		&quot;name&quot;: &quot;status&quot;,&#xd;
		&quot;type&quot;: &quot;string&quot;,&#xd;
		&quot;value&quot;: &quot;enabled&quot;&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;designboard&quot;,&#xd;
		&quot;type&quot;: &quot;object&quot;,&#xd;
		&quot;value&quot;: {&#xd;
			&quot;blocks&quot;: [{&#xd;
				&quot;id&quot;: 1,&#xd;
				&quot;module&quot;: null,&#xd;
				&quot;type&quot;: &quot;Task&quot;,&#xd;
				&quot;values&quot;: {&#xd;
					&quot;name&quot;: &quot;Counting&quot;,&#xd;
					&quot;operator&quot;: &quot;counter&quot;,&#xd;
					&quot;outputs&quot;: [&quot;Stat&quot;]&#xd;
				},&#xd;
				&quot;x&quot;: 202,&#xd;
				&quot;y&quot;: -146&#xd;
			}, {&#xd;
				&quot;id&quot;: 2,&#xd;
				&quot;module&quot;: null,&#xd;
				&quot;type&quot;: &quot;Task&quot;,&#xd;
				&quot;values&quot;: {&#xd;
					&quot;name&quot;: &quot;Detector&quot;,&#xd;
					&quot;operator&quot;: &quot;anomaly&quot;,&#xd;
					&quot;outputs&quot;: [&quot;Anomaly&quot;]&#xd;
				},&#xd;
				&quot;x&quot;: -194,&#xd;
				&quot;y&quot;: -134&#xd;
			}, {&#xd;
				&quot;id&quot;: 3,&#xd;
				&quot;module&quot;: null,&#xd;
				&quot;type&quot;: &quot;Shuffle&quot;,&#xd;
				&quot;values&quot;: {&#xd;
					&quot;groupby&quot;: &quot;ALL&quot;,&#xd;
					&quot;selectedattributes&quot;: [&quot;all&quot;]&#xd;
				},&#xd;
				&quot;x&quot;: 4,&#xd;
				&quot;y&quot;: -18&#xd;
			}, {&#xd;
				&quot;id&quot;: 4,&#xd;
				&quot;module&quot;: null,&#xd;
				&quot;type&quot;: &quot;EntityStream&quot;,&#xd;
				&quot;values&quot;: {&#xd;
					&quot;groupby&quot;: &quot;EntityID&quot;,&#xd;
					&quot;scoped&quot;: true,&#xd;
					&quot;selectedattributes&quot;: [&quot;all&quot;],&#xd;
					&quot;selectedtype&quot;: &quot;PowerPanel&quot;&#xd;
				},&#xd;
				&quot;x&quot;: -447,&#xd;
				&quot;y&quot;: -179&#xd;
			}, {&#xd;
				&quot;id&quot;: 5,&#xd;
				&quot;module&quot;: null,&#xd;
				&quot;type&quot;: &quot;EntityStream&quot;,&#xd;
				&quot;values&quot;: {&#xd;
					&quot;groupby&quot;: &quot;ALL&quot;,&#xd;
					&quot;scoped&quot;: false,&#xd;
					&quot;selectedattributes&quot;: [&quot;all&quot;],&#xd;
					&quot;selectedtype&quot;: &quot;Rule&quot;&#xd;
				},&#xd;
				&quot;x&quot;: -438,&#xd;
				&quot;y&quot;: -5&#xd;
			}],&#xd;
			&quot;edges&quot;: [{&#xd;
				&quot;block1&quot;: 3,&#xd;
				&quot;block2&quot;: 1,&#xd;
				&quot;connector1&quot;: [&quot;stream&quot;, &quot;output&quot;],&#xd;
				&quot;connector2&quot;: [&quot;streams&quot;, &quot;input&quot;],&#xd;
				&quot;id&quot;: 2&#xd;
			}, {&#xd;
				&quot;block1&quot;: 2,&#xd;
				&quot;block2&quot;: 3,&#xd;
				&quot;connector1&quot;: [&quot;outputs&quot;, &quot;output&quot;, 0],&#xd;
				&quot;connector2&quot;: [&quot;in&quot;, &quot;input&quot;],&#xd;
				&quot;id&quot;: 3&#xd;
			}, {&#xd;
				&quot;block1&quot;: 4,&#xd;
				&quot;block2&quot;: 2,&#xd;
				&quot;connector1&quot;: [&quot;stream&quot;, &quot;output&quot;],&#xd;
				&quot;connector2&quot;: [&quot;streams&quot;, &quot;input&quot;],&#xd;
				&quot;id&quot;: 4&#xd;
			}, {&#xd;
				&quot;block1&quot;: 5,&#xd;
				&quot;block2&quot;: 2,&#xd;
				&quot;connector1&quot;: [&quot;stream&quot;, &quot;output&quot;],&#xd;
				&quot;connector2&quot;: [&quot;streams&quot;, &quot;input&quot;],&#xd;
				&quot;id&quot;: 5&#xd;
			}]&#xd;
		}&#xd;
	}, {&#xd;
		&quot;name&quot;: &quot;template&quot;,&#xd;
		&quot;type&quot;: &quot;object&quot;,&#xd;
		&quot;value&quot;: {&#xd;
			&quot;description&quot;: &quot;detect anomaly events in shops&quot;,&#xd;
			&quot;name&quot;: &quot;anomaly-detection&quot;,&#xd;
			&quot;tasks&quot;: [{&#xd;
				&quot;input_streams&quot;: [{&#xd;
					&quot;groupby&quot;: &quot;ALL&quot;,&#xd;
					&quot;scoped&quot;: true,&#xd;
					&quot;selected_attributes&quot;: [],&#xd;
					&quot;selected_type&quot;: &quot;Anomaly&quot;&#xd;
				}],&#xd;
				&quot;name&quot;: &quot;Counting&quot;,&#xd;
				&quot;operator&quot;: &quot;counter&quot;,&#xd;
				&quot;output_streams&quot;: [{&#xd;
					&quot;entity_type&quot;: &quot;Stat&quot;&#xd;
				}]&#xd;
			}, {&#xd;
				&quot;input_streams&quot;: [{&#xd;
					&quot;groupby&quot;: &quot;EntityID&quot;,&#xd;
					&quot;scoped&quot;: true,&#xd;
					&quot;selected_attributes&quot;: [],&#xd;
					&quot;selected_type&quot;: &quot;PowerPanel&quot;&#xd;
				}, {&#xd;
					&quot;groupby&quot;: &quot;ALL&quot;,&#xd;
					&quot;scoped&quot;: false,&#xd;
					&quot;selected_attributes&quot;: [],&#xd;
					&quot;selected_type&quot;: &quot;Rule&quot;&#xd;
				}],&#xd;
				&quot;name&quot;: &quot;Detector&quot;,&#xd;
				&quot;operator&quot;: &quot;anomaly&quot;,&#xd;
				&quot;output_streams&quot;: [{&#xd;
					&quot;entity_type&quot;: &quot;Anomaly&quot;&#xd;
				}]&#xd;
			}]&#xd;
		}&#xd;
	}],&#xd;
	&quot;domainMetadata&quot;: [{&#xd;
		&quot;name&quot;: &quot;location&quot;,&#xd;
		&quot;type&quot;: &quot;global&quot;,&#xd;
		&quot;value&quot;: &quot;global&quot;&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">180.179.214.208</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ngsi10/updateContext</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DockerImage" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;entityId&quot;: {&#xd;
                &quot;type&quot;: &quot;DockerImage&quot;,&#xd;
                &quot;id&quot;: &quot;test12&quot;&#xd;
        },&#xd;
        &quot;attributes&quot;: [{&#xd;
                &quot;name&quot;: &quot;image&quot;,&#xd;
                &quot;type&quot;: &quot;string&quot;,&#xd;
                &quot;value&quot;: &quot;fogflow/counter&quot;&#xd;
        }, {&#xd;
                &quot;name&quot;: &quot;tag&quot;,&#xd;
                &quot;type&quot;: &quot;string&quot;,&#xd;
                &quot;value&quot;: &quot;latest&quot;&#xd;
        }, {&#xd;
                &quot;name&quot;: &quot;hwType&quot;,&#xd;
                &quot;type&quot;: &quot;string&quot;,&#xd;
                &quot;value&quot;: &quot;X86&quot;&#xd;
        }, {&#xd;
                &quot;name&quot;: &quot;osType&quot;,&#xd;
                &quot;type&quot;: &quot;string&quot;,&#xd;
                &quot;value&quot;: &quot;Linux&quot;&#xd;
        }, {&#xd;
                &quot;name&quot;: &quot;operator&quot;,&#xd;
                &quot;type&quot;: &quot;string&quot;,&#xd;
                &quot;value&quot;: &quot;counter&quot;&#xd;
        }, {&#xd;
                &quot;name&quot;: &quot;prefetched&quot;,&#xd;
                &quot;type&quot;: &quot;boolean&quot;,&#xd;
                &quot;value&quot;: false&#xd;
        }],&#xd;
        &quot;domainMetadata&quot;: [{&#xd;
                &quot;name&quot;: &quot;operator&quot;,&#xd;
                &quot;type&quot;: &quot;string&quot;,&#xd;
                &quot;value&quot;: &quot;counter&quot;&#xd;
        }, {&#xd;
                &quot;name&quot;: &quot;location&quot;,&#xd;
                &quot;type&quot;: &quot;global&quot;,&#xd;
                &quot;value&quot;: &quot;global&quot;&#xd;
        }]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">180.179.214.208</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ngsi10/updateContext</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="FogFunction" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;entityId&quot;: {&#xd;
                &quot;type&quot;: &quot;FogFunction&quot;,&#xd;
                &quot;id&quot;: &quot;test13&quot;&#xd;
        },&#xd;
        &quot;attributes&quot;: [{&#xd;
                &quot;name&quot;: &quot;name&quot;,&#xd;
                &quot;type&quot;: &quot;string&quot;,&#xd;
                &quot;value&quot;: &quot;Test&quot;&#xd;
        }, {&#xd;
                &quot;name&quot;: &quot;topology&quot;,&#xd;
                &quot;type&quot;: &quot;object&quot;,&#xd;
                &quot;value&quot;: {&#xd;
                        &quot;description&quot;: &quot;just for a simple test&quot;,&#xd;
                        &quot;name&quot;: &quot;Test&quot;,&#xd;
                        &quot;tasks&quot;: [{&#xd;
                                &quot;input_streams&quot;: [{&#xd;
                                        &quot;groupby&quot;: &quot;EntityID&quot;,&#xd;
                                        &quot;scoped&quot;: false,&#xd;
                                        &quot;selected_attributes&quot;: [],&#xd;
                                        &quot;selected_type&quot;: &quot;Temperature&quot;&#xd;
                                }],&#xd;
                                &quot;name&quot;: &quot;Main&quot;,&#xd;
                                &quot;operator&quot;: &quot;dummy&quot;,&#xd;
                                &quot;output_streams&quot;: [{&#xd;
                                        &quot;entity_type&quot;: &quot;Out&quot;&#xd;
                                }]&#xd;
                        }]&#xd;
                }&#xd;
        }, {&#xd;
                &quot;name&quot;: &quot;designboard&quot;,&#xd;
                &quot;type&quot;: &quot;object&quot;,&#xd;
                &quot;value&quot;: {&#xd;
                        &quot;blocks&quot;: [{&#xd;
                                &quot;id&quot;: 1,&#xd;
                                &quot;module&quot;: null,&#xd;
                                &quot;type&quot;: &quot;Task&quot;,&#xd;
                                &quot;values&quot;: {&#xd;
                                        &quot;name&quot;: &quot;Main&quot;,&#xd;
                                        &quot;operator&quot;: &quot;dummy&quot;,&#xd;
                                        &quot;outputs&quot;: [&quot;Out&quot;]&#xd;
                                },&#xd;
                                &quot;x&quot;: 123,&#xd;
                                &quot;y&quot;: -99&#xd;
                        }, {&#xd;
                                &quot;id&quot;: 2,&#xd;
                                &quot;module&quot;: null,&#xd;
                                &quot;type&quot;: &quot;EntityStream&quot;,&#xd;
                                &quot;values&quot;: {&#xd;
                                        &quot;groupby&quot;: &quot;EntityID&quot;,&#xd;
                                        &quot;scoped&quot;: false,&#xd;
                                        &quot;selectedattributes&quot;: [&quot;all&quot;],&#xd;
                                        &quot;selectedtype&quot;: &quot;Temperature&quot;&#xd;
                                },&#xd;
                                &quot;x&quot;: -194,&#xd;
                                &quot;y&quot;: -97&#xd;
                        }],&#xd;
                        &quot;edges&quot;: [{&#xd;
                                &quot;block1&quot;: 2,&#xd;
                                &quot;block2&quot;: 1,&#xd;
                                &quot;connector1&quot;: [&quot;stream&quot;, &quot;output&quot;],&#xd;
                                &quot;connector2&quot;: [&quot;streams&quot;, &quot;input&quot;],&#xd;
                                &quot;id&quot;: 1&#xd;
                        }]&#xd;
                }&#xd;
        }, {&#xd;
                &quot;name&quot;: &quot;intent&quot;,&#xd;
                &quot;type&quot;: &quot;object&quot;,&#xd;
                &quot;value&quot;: {&#xd;
                        &quot;geoscope&quot;: {&#xd;
                                &quot;scopeType&quot;: &quot;global&quot;,&#xd;
                                &quot;scopeValue&quot;: &quot;global&quot;&#xd;
                        },&#xd;
                        &quot;priority&quot;: {&#xd;
                                &quot;exclusive&quot;: false,&#xd;
                                &quot;level&quot;: 0&#xd;
                        },&#xd;
                        &quot;qos&quot;: &quot;Max Throughput&quot;,&#xd;
                        &quot;topology&quot;: &quot;Test&quot;&#xd;
                }&#xd;
        }, {&#xd;
                &quot;name&quot;: &quot;status&quot;,&#xd;
                &quot;type&quot;: &quot;string&quot;,&#xd;
                &quot;value&quot;: &quot;enabled&quot;&#xd;
        }],&#xd;
        &quot;domainMetadata&quot;: [{&#xd;
                &quot;name&quot;: &quot;location&quot;,&#xd;
                &quot;type&quot;: &quot;global&quot;,&#xd;
                &quot;value&quot;: &quot;global&quot;&#xd;
        }]&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">180.179.214.208</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ngsi10/updateContext</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
