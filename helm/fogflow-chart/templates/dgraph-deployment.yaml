#service account for all components in fogflow namespace
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: {{ .Values.namespace }} 
  name: fogflow-dns
---
#ClusterRole fogflow-dns creation for all components in fogflow namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: {{ .Values.namespace }}
  name: fogflow-dns
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get","watch","list"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get","watch","list","create"]
---
#ClusterRoleBinding for all components fogflow-dns in fogflow namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: {{ .Values.namespace }}
  name: fogflow-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fogflow-dns
subjects:
- kind: ServiceAccount
  name: fogflow-dns
  namespace: {{ .Values.namespace }} 

---

#Dgraph deployment and service configuration 
apiVersion: apps/v1
kind: Deployment
metadata:
  #FogFlow cloud components will be deployed inside fogflow namespace 
  namespace: {{ .Values.namespace }}                      
  annotations:
    kompose.version: 1.21.0 (992df58d8)
    "helm.sh/hook-weight": "1" 
  creationTimestamp: null
  labels:
    io.kompose.service: dgraph
  name: dgraph
spec:
  #replicas will make sure that no. of replicaCount mention in values.yaml 
  # are running all the time for the deployment
  replicas: {{ .Values.replicaCount }} 
  selector:
    matchLabels:
      io.kompose.service: dgraph
  minReadySeconds: 10
  #strategy tells about How do want to update the pods?
  strategy:
    rollingUpdate:
      maxSurge: 25%  
      maxUnavailable: 25% 
    type: RollingUpdate
  # This template field is a regular pod configuration 
  # nested inside the deployment spec
  template:
    metadata:
      annotations:
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: dgraph
    spec:
      containers:
      - image: fogflow/dgraph:latest
        imagePullPolicy: Always
        name: dgraph
        ports:
        - containerPort: 6080
          hostPort: 6080
        - containerPort: 8080
          hostPort: 8082
        - containerPort: 9080
          hostPort: 9082
        - containerPort: 8000
          hostPort: 8000
        #readiness and liveness to check pod's Health
        readinessProbe:
          tcpSocket:
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
        #CPU and memory limits for dgraph deployment
          limits:
            memory: 3Gi
            cpu: 2
          requests: 
            memory: 2Gi
            cpu: 1 
        volumeMounts:
        - name: dgraph 
          mountPath: /dgraph 
          #Dgraph requires write permission           
          readOnly: false              
      restartPolicy: Always
      serviceAccountName: fogflow-dns 
      volumes:
      - name: dgraph
        hostPath: 
          path: {{ .Values.dgraph.hostPath.path }} 

---

apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.namespace }} 
  annotations:
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: dgraph
  name: dgraph
spec:
  ports:
  - name: "6080"
    port: 6080
    targetPort: 6080
  - name: "8080"
    port: 8082
    targetPort: 8082
  - name: "9080"
    port: 9082
    targetPort: 9082
  - name: "8000"
    port: 8000
    targetPort: 8000
  selector:
    io.kompose.service: dgraph
  externalIPs: {{ .Values.Service.spec.externalIPs }}

