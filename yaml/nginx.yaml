#nginx deployment and service configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  #FogFlow cloud components will be deployed inside fogflow namespace
#  namespace: fogflow
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: nginx
  name: nginx
spec:
  #replicas will make sure that 2 pods running all the time for the deployment
  replicas: 1 
  selector:
    matchLabels:
      io.kompose.service: nginx
  minReadySeconds: 10
  #strategy tells about How do want to update the pods?
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  # This template field is a regular pod configuration
  # nested inside the deployment spec
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: nginx
    spec:
      containers:
      - image: nginx:latest
        imagePullPolicy: ""
        name: nginx
        ports:
        - containerPort: 80
          hostPort: 80
        #readiness and liveness to check pod's Health
        resources:
          #CPU and memory limits for nginx deployment
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          readOnly: true
      restartPolicy: Always
#      serviceAccountName: fogflow-dns 
      volumes:
      - name: nginx-conf 
        hostPath:
          path: /home/necuser/sanchita/nginx.conf 
---

apiVersion: v1
kind: Service
metadata:
#  namespace: fogflow
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: nginx
  name: nginx
spec:
  ports:
  - name: "80"
    port: 80
    targetPort: 80
  selector:
    io.kompose.service: nginx
  externalIPs: [172.30.48.24]
status:
  loadBalancer: {}

